#!/usr/local/bin/nush

(load "Nunja")

(set exit (NuBridgedFunction functionWithName:"exit" signature:"vi"))

((((NSProcessInfo processInfo) processIdentifier) stringValue) writeToFile:"tinyd.pid" atomically:NO)

;;;;;;;;;;;;;;;;;;;;;;;;;
;; main program
;;;;;;;;;;;;;;;;;;;;;;;;;

(set argv ((NSProcessInfo processInfo) arguments))
(set argi 0)

;; if we're running as a nush script, skip the nush path
(if (/(.*)nush$/ findInString:(argv 0))
    (set argi (+ argi 1)))

;; skip the program name
(set argi (+ argi 1))

;; the option(s) we need to set
(set site ".")

(set port 9900)
(Nunja setLocalOnly:NO)

;; process the remaining arguments
(while (< argi (argv count))
       (case (argv argi)
             ("-s"        (set argi (+ argi 1)) (set site (argv argi)))
             ("--site"    (set argi (+ argi 1)) (set site (argv argi)))
             ("-p"        (set argi (+ argi 1)) (set port ((argv argi) intValue)))
             ("--port"    (set argi (+ argi 1)) (set port ((argv argi) intValue)))
             ("-l"        (Nunja setLocalOnly:YES))
             ("--local"   (Nunja setLocalOnly:YES))
             ("-v"        (Nunja setVerbose:YES))
             ("--verbose" (Nunja setVerbose:YES))
             (else (puts (+ "unknown option: " (argv argi)))
                   (exit -1)))
       (set argi (+ argi 1)))


(set n ((Nunja alloc) init))
(if (Nunja localOnly)
    (then (n bindToAddress:"127.0.0.1" port:port))
    (else (n bindToAddress:"0.0.0.0" port:port)))

(if site
    (n setController:((NunjaController alloc) initWithSite:site)))

(puts (+ "tinyd is running on port " port))

(set $site site) ;; make the path to the site directory available to handlers

(n run)

